# application.properties 예전 레거시 방식 web.xml, root-context.xml, servlet-context.xml의 합본
# .properties 대신 .yml로 하면 파일이 좀 더 가벼워진다.

logging:
  level:
    com :
      jig:
        blog: debug

server:
  port: 8080
  servlet:
    context-path:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    jsp:
      init-parameters:
        development: true

spring:
  # 스프링에서 js 파일 변경시 자동 반영.. 안되는데?
  devtools:
    livereload:
      enabled: true
#    remote:
#      restart:
#        enabled: true
#    restart:
#      enabled: true
  #  freemarker:
#    cache: false
#  thymeleaf:
#    cache: false

  config:
    import: key_warning_commit.yml

  rabbitmq:
    username: guest
    password: guest
    port: 5672  # 왜15672가 아니지?
    host: localhost
#    virtualHost: levi.vhost
#    routeKey: test.route
#    exchangeName: test.exchange
#    queueName: testQueue
#    deadLetterExchange: dead.letter.exchange
#    deadLetterRouteKey: dead.letter.route

  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=Asia/Seoul
    username: jig123
    password: root

  jpa:
    open-in-view: false # sse 주의사항으로 false설정을 권장함.
    hibernate:
      #create : 서버 시작시마다 DB초기화, update : 수정사항만 DB에 반영, none : 동작 안 함
      ddl-auto: update
      naming:
        # org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl : 변수명 그대로 테이블에 필드로 만듬
        # org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy : 소문자와 언더바로 구성된 필드로 만듬
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      # true : jpa가 사용하는 기본 넘버링 전략을 사용, false : 기본 넘버링 전략 사용 안 함(각 클래스에서 설정?)
      use-new-id-generator-mappings: false
    # true : 콘솔에 sql 보이게 함
    show-sql: false
    # 콘솔에 sql 정렬
    properties:
      hibernate.format_sql: true

  jackson:
    serialization:
      fail-on-empty-beans: false